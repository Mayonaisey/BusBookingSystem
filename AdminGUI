
package application;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.Text;
import javafx.stage.Stage;

/**
 * @author Maya Elmosalamy
 *
 */
/////////////////FOR HANDING BUTTON CLICKED IN ADMIN FORM/////////////////////////////////////////////////
public class AdminButtonClick implements EventHandler<ActionEvent> {
	static Stage TripStage = new Stage();
	Scene s;
	static Button bt1, bt3, btAddV, btRemoveV, btEditV, btListV;
	ArrayList<Vehicle> vehicleList = new ArrayList<>();

	@Override

	public void handle(ActionEvent event) {
		if (event.getSource() == Main.bt5) { /// vehicles form

//			Button btVehicle = new Button("vehicle");

			// Stage sv =new Stage();
			StackPane sp = new StackPane();
			// sp.setStyle("-fx-background-image:
			// url('file:D:\\OOP\\BusProjectFX\\src\\pexels-elviss-railijs-bitāns-1210622.jpg');
			// "
			// + "-fx-background-size: cover;");
			Image img = new Image("pexels-elviss-railijs-bitāns-1210622.jpg"); // bus photo
			ImageView iv = new ImageView(img);
			btAddV = new Button("add vehicle");
			btRemoveV = new Button("remove vehicle");
			btEditV = new Button("edit vehicle");
			btListV = new Button("list vehicles");
			VBox vb3 = new VBox();
			vb3.getChildren().addAll(btAddV, btRemoveV, btEditV, btListV);
			vb3.setSpacing(15);
			vb3.setAlignment(Pos.TOP_CENTER);
			vb3.setPadding(new Insets(100));
			sp.getChildren().addAll(iv, vb3);

			// for add vehicle
			btAddV.setOnAction(new VehicleGUI());
			btRemoveV.setOnAction(new VehicleGUI());
			btEditV.setOnAction(new VehicleGUI());
			btListV.setOnAction(new VehicleGUI());

			TripStage.setScene(new Scene(sp, 1534, 780));
			TripStage.show();
		}

		else if (event.getSource() == Main.bt6) { // trips form
			VBox root = new VBox(20); // for all buttons
			HBox hb1 = new HBox(20); // for pic and buttons
			StackPane sp = new StackPane(); // for image
			Image img = new Image("bus-pictures-wzj4qjebtwtm0xdn.jpg"); // bus photo
			ImageView iv = new ImageView(img);

			bt1 = new Button("Add Trip");
			bt3 = new Button("List Trip");

			bt1.setMinWidth(150);
			bt1.setMaxWidth(80);

			bt3.setMinWidth(150);
			bt3.setMaxWidth(80);

			bt1.setOnAction(new ButtonClick());
			bt3.setOnAction(new ButtonClick());

			root.getChildren().addAll(bt1, bt3, iv);
			root.setPadding(new Insets(150));
			Text t1 = new Text("GO BUS");
			t1.setFont(Font.font("Elephant", FontPosture.ITALIC, 50));
			hb1.getChildren().addAll(root, t1);
			hb1.setPadding(new Insets(100));

			sp.getChildren().addAll(iv, hb1);
			Scene scene = new Scene(sp, 1534, 780);
			TripStage.setTitle("Trips Form");

			TripStage.setScene(scene);
			TripStage.show();
		}

		else if (event.getSource() == Main.bt7) {// users form
			Stage work = new Stage();
			Main.adminWorkPage(work);
			System.out.println("users form");
		}

		else if (event.getSource() == Main.bt8) {// bookings form

			//TextField tfViewB = new TextField();
			TextArea ta = new TextArea();
			ArrayList<Booking> bk = new ArrayList<Booking>();
			//Button btBooking = new Button("search");
			HBox hb1 = new HBox(15, ta);
//			hb1.getChildren().add(btBooking);
//			hb1.setSpacing(15);
//			btBooking.setOnAction(e16 -> {
				try {
					Admin.loadBookingFromFile("Booking.dat", bk);
				} catch (ClassNotFoundException ex) {
					System.out.println(ex);
				}

				for (Booking booking : bk) {
//					if (booking.getGuestuserName() == tfViewB.getText()) {
						ta.appendText(booking.getObjectDetail(booking));
						System.out.println(booking.getObjectDetail(booking));
					//}
				}
				TripStage.setScene((new Scene(hb1, 1534, 780)));
				TripStage.show();

		//	});
			TripStage.setScene(new Scene(hb1, 400, 200));
			TripStage.show();

		}

	}

}
///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
package application;

import java.lang.ClassNotFoundException;
import java.util.ArrayList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Background;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.stage.Stage;

/**
 * @author Maya Elmosalamy
 *
 */
///////////////FOR HANDLING BUTTONS CLICKED IN TRIPS FORM (adding trip)//////////////////////////////////////////
public class ButtonClick implements EventHandler<ActionEvent> { // generic interface instead of Eventhandler for
																// keyevent,mouseevent
	Stage secondaryStage = new Stage();
	GridPane gp;
	Scene scene;
	VBox vb1 = new VBox(10);// for labels
	VBox vb2 = new VBox(10);// for buttons
	HBox hb = new HBox(10); // for labels and comboboxes
	StackPane sp = new StackPane(); // for image
	Image img = new Image("travel.jpg"); // sea photo
	ImageView iv = new ImageView(img);
	Label lb1;
	TextField tx1;
	Label lb6;
	TextField tx6;
	Label lb2;
	TextField tx2;
	Label lb3;
	Label lb4;
	ComboBox<String> cb5;
	Label lb5;
	ComboBox<String> cb3;
	Label lb8;
	ComboBox<String> cb8;
	ComboBox<Integer> cb2;
	Alert alert;
	Alert alert2;
	ArrayList<Trip> listOfTrips;
	ArrayList<Vehicle> listOfVehicles;
	Button donetrip;
	Button removeTrip;
	Trip trip;
	TextArea tripsList;
	Label lbcat;
	ComboBox<String> cbCat;
	Button btgetIds;

	@Override
	public void handle(ActionEvent event) {

		if (event.getSource() == AdminButtonClick.bt1) { // open a form for adding a trip
			System.out.println("i'll add trip");
			lb1 = new Label("Pickup point");
			lb1.setFont(new Font("Arial", 30));
			lb1.setTextFill(Color.ANTIQUEWHITE);

			tx1 = new TextField("Cairo");
			tx1.setMinWidth(150);
			tx1.setMaxWidth(80);

			lb2 = new Label("Destination point");
			lb2.setFont(new Font("Arial", 30));
			lb2.setTextFill(Color.ANTIQUEWHITE);

			tx2 = new TextField("Dahab");
			tx2.setMinWidth(150);
			tx2.setMaxWidth(80);

			lb3 = new Label("Pickup time");
			lb3.setFont(new Font("Arial", 28));
			lb3.setTextFill(Color.ANTIQUEWHITE);
			cb3 = new ComboBox<String>();
			cb3.getItems().addAll("8", "10", "12", "15", "17", "19", "20", "22");

			lb8 = new Label("Day");
			lb8.setFont(new Font("Arial", 28));
			lb8.setTextFill(Color.ANTIQUEWHITE);
			cb8 = new ComboBox<String>();
			cb8.getItems().addAll("Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday");

			lb4 = new Label("Bus ID");
			lb4.setFont(new Font("Arial", 28));
			lb4.setTextFill(Color.ANTIQUEWHITE);

			lbcat = new Label("Trip Category");
			lbcat.setFont(new Font("Arial", 28));
			lbcat.setTextFill(Color.ANTIQUEWHITE);
			cbCat = new ComboBox<String>();
			cbCat.getItems().addAll("superjet , 44", "minibus , 11", "bus , 28");

			// TO SAVE BUS IDS FROM VEHICLE FILE TO ARRAYLIST THEN TO COMBOBOX
			cb2 = new ComboBox<>();// add all bus ids from vehicle.dat file--> second class minibus
			ArrayList<Vehicle> BusIds = new ArrayList<>();

			lb5 = new Label("Trip Preferance");
			lb5.setFont(new Font("Arial", 28));
			lb5.setTextFill(Color.ANTIQUEWHITE);
			cb5 = new ComboBox<String>();
			cb5.getItems().addAll("First Class", "Second Class", "Third Class");

			lb6 = new Label("Trip Price");
			lb6.setFont(new Font("Arial", 30));
			lb6.setTextFill(Color.ANTIQUEWHITE);
			tx6 = new TextField("305.99");
			tx6.setMinWidth(150);
			tx6.setMaxWidth(80);

			alert = new Alert(AlertType.WARNING);
			alert.setContentText("Enter empty data fields.");
			alert.setHeaderText(null);
			alert.setTitle("Empty Field Warning");
			donetrip = new Button("Done");
			donetrip.setMinWidth(100);
			donetrip.setMaxWidth(90);
			listOfTrips = new ArrayList<Trip>();
			listOfVehicles = new ArrayList<Vehicle>();
			gp = new GridPane();
			btgetIds = new Button("Get Bus Ids");
			gp.setAlignment(Pos.CENTER);
			gp.add(btgetIds, 2, 5);
			btgetIds.setOnAction(e -> {
				if (!cb5.getSelectionModel().isEmpty() && !cbCat.getSelectionModel().isEmpty()) {
					// cbCat,cb5 -->compare cbCat and cb5 if they have the same value as a vehicle
					// object
					// if yes put the ids in cb2 of bus ids
					try {
						Admin.loadDataFromFile( BusIds,"Vehicle.dat"); // busids has now objects of vehicle
						// READ FROM ARRAYLIST TO COMBOBOX
						for (int i = 0; i < BusIds.size(); i++) {
							// System.out.println(BusIds.get(i)+"\t");
							if (cbCat.getValue().equalsIgnoreCase(BusIds.get(i).getVehicleCategory())
									&& cb5.getValue().equalsIgnoreCase(BusIds.get(i).getPreferance())) {
								cb2.getItems().addAll(BusIds.get(i).getVehicleId());
							}
						}

					} catch (ClassNotFoundException r2) {
						r2.printStackTrace();
					}
				}
			});
			donetrip.setOnAction(e -> {
				boolean done = false;
				try {
					Admin.loadDataFromFile("Trips.dat", listOfTrips);
				} catch (ClassNotFoundException e1) {
					e1.printStackTrace();
				}
				
					if (cb2.getSelectionModel().isEmpty()) {
						cb2.setBackground(Background.fill(Color.CRIMSON));
						alert.show();
					} else if (!cb2.getSelectionModel().isEmpty())
						cb2.setBackground(Background.fill(Color.WHITE));
					if (cb3.getSelectionModel().isEmpty()) {
						cb3.setBackground(Background.fill(Color.CRIMSON));
						alert.show();
					} else if (!cb3.getSelectionModel().isEmpty())
						cb3.setBackground(Background.fill(Color.WHITE));
					if (cb5.getSelectionModel().isEmpty()) {
						cb5.setBackground(Background.fill(Color.CRIMSON));
						alert.show();
					} else if (!cb5.getSelectionModel().isEmpty())
						cb5.setBackground(Background.fill(Color.WHITE));
					if (cb8.getSelectionModel().isEmpty()) {
						cb8.setBackground(Background.fill(Color.CRIMSON));
						alert.show();
					} else if (!cb8.getSelectionModel().isEmpty())
						cb8.setBackground(Background.fill(Color.WHITE));

					if (!cb2.getSelectionModel().isEmpty() && !cb3.getSelectionModel().isEmpty()
							&& !cb5.getSelectionModel().isEmpty() && !cb8.getSelectionModel().isEmpty()
							&& !cbCat.getSelectionModel().isEmpty()) {
						while (!done) {
						listOfTrips.add(new Trip(tx1.getText(), tx2.getText(), cb8.getValue(),
								Double.parseDouble(cb3.getValue()), cb2.getValue(), cb5.getValue(),
								Double.parseDouble(tx6.getText()), cbCat.getValue()));

						alert2 = new Alert(AlertType.CONFIRMATION);
						alert2.setContentText("Do you want to add another Trip?");
						alert2.setHeaderText(null);
						alert2.setTitle("Inquiry");
						alert2.getButtonTypes().setAll(ButtonType.YES, ButtonType.NO);
						if (alert2.showAndWait().get() == ButtonType.NO) {
							secondaryStage.close();
							done = true;
							Admin.saveDataToFile("Trips.dat", listOfTrips);
						} // end if
						else {
							tx1.clear();
							tx2.clear();
							tx6.clear();
							cb2.getItems().clear();
							
						}
					} // end if not empty

				} // end while

			});
			listOfTrips.clear();
			vb1.getChildren().addAll(lb1, lb2, lb8, lb3, lbcat, lb5, lb4, lb6);
			vb1.setSpacing(10);
			vb1.setPadding(new Insets(95));
			vb2.getChildren().addAll(tx1, tx2, cb8, cb3, cbCat, cb5, cb2, tx6, donetrip);
			vb2.setPadding(new Insets(98));
			vb2.setSpacing(20);
			hb.getChildren().addAll(vb1, vb2, gp);
			sp.getChildren().addAll(iv, hb);

			scene = new Scene(sp, 1534, 780);
			secondaryStage.setScene(scene);
			secondaryStage.setTitle("Add Trip");
			secondaryStage.show();
		} 

		else if (event.getSource() == AdminButtonClick.bt3) {// open a form for removing a trip
			secondaryStage.setTitle("List Trips");

			tripsList = new TextArea();
			tripsList.setEditable(false);
			tripsList.setPrefSize(300, 800);
			tripsList.setWrapText(true); // New line of the text exceeds the text area
			tripsList.setText("Trips Available:");
			Image img = new Image("travel.jpg"); // bus photo
			ImageView iv = new ImageView(img);
			donetrip = new Button("Save Changes");
			donetrip.setMinWidth(120);
			donetrip.setMaxWidth(90);
			removeTrip = new Button("Remove Trip");
			removeTrip.setMinWidth(100);
			removeTrip.setMaxWidth(90);
			

			cb2 = new ComboBox<Integer>();
			vb1.getChildren().addAll(cb2, removeTrip,  donetrip);
			vb1.setAlignment(Pos.CENTER);
			hb.getChildren().addAll(tripsList, vb1);
			hb.setPadding(new Insets(25));
			hb.setSpacing(25);
			hb.setAlignment(Pos.CENTER);
			sp.getChildren().addAll(iv, hb);

			/////////////////////////// FOR LISTING AND ////////////////////////////////
			/////////////////////////// REMOVE AND EDIT ///////////////////////////////////
			ArrayList<Trip> triplist = new ArrayList<Trip>();
			ArrayList<Trip> temp = new ArrayList<Trip>();
			try {
				triplist.clear();
				Admin.loadDataFromFile("Trips.dat", triplist);
			} catch (ClassNotFoundException e) {
				e.printStackTrace();
			}
			int i;
			for (i = 0; i < triplist.size(); i++) {
				tripsList.appendText("\nTrip " + (i + 1) + ":\n" + triplist.get(i).getObjectDetails());
				cb2.getItems().add(i + 1);
			}

			removeTrip.setOnAction(e -> {
					alert = new Alert(AlertType.CONFIRMATION);
					alert.setContentText("Do you want to remove another Trip?");
					alert.setHeaderText(null);
					alert.setTitle("Inquiry");
					alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.NO);
					boolean finish = false;
					triplist.clear();
					try {
						Admin.loadDataFromFile("Trips.dat", triplist);
					} catch (ClassNotFoundException e1) {
						e1.printStackTrace();
					}
					while (!finish) {
						
						Admin.removeTrip(cb2.getValue(), triplist);
						tripsList.clear();
						for (int j = 0; j < triplist.size(); j++) {
							tripsList.appendText("\nTrip " + (j + 1) + ":\n" + triplist.get(j).getObjectDetails());
//							cb2.getItems().add(j + 1);
						}
						if (alert.showAndWait().get() == ButtonType.NO) {
							// save changes
							finish = true;
							Admin.saveDataToFile("Trips.dat", triplist);
							alert.close();
							alert.setHeaderText("Data Saved Successfully");
							alert.setContentText(null);
							alert.getButtonTypes().setAll(ButtonType.APPLY);
							if(alert.showAndWait().get()==ButtonType.APPLY)
								secondaryStage.close();
						}	
						cb2.getItems().clear();
//						triplist.clear();
//						try {
//							Admin.loadDataFromFile("Trips.dat", triplist);
//						} catch (ClassNotFoundException e1) {
//							e1.printStackTrace();
//						}
						for (int j = 0; j < triplist.size(); j++) {
							cb2.getItems().add(j + 1);
						}
					}
					Admin.saveDataToFile("Trips.dat", triplist);

			});

			triplist.clear();

			scene = new Scene(sp, 1534, 780);
			secondaryStage.setScene(scene);
			secondaryStage.show();
		}

	}
}
